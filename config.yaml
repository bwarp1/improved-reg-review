# General Application Configuration
app:
  name: "Regulatory Compliance Analysis Tool"

# Email Configuration
email:
  enabled: false
  smtp_server: smtp.example.com
  smtp_port: 587
  use_tls: true
  username: your_username
  password: your_password
  from_address: notifications@yourcompany.com
  to_address: team@yourcompany.com

# API Configuration
api:
  key: "DEMO_KEY"  # Add your Regulations.gov API key here
  base_url: "https://api.regulations.gov/v4"
  rate_limit: 1000  # requests per hour
  user_agent: "CompliancePoCAgent/1.0"
  use_demo_data: false  # Set to true to use demo data regardless of API key
  
# File paths (relative to project root)
paths:
  data_dir: "data"
  policy_dir: "sample_data/policies"
  regulations_dir: "regulations"
  output_dir: "data/output"
  logs_dir: "logs"
  
# NLP Configuration
nlp:
  model: "en_core_web_sm"  # spaCy model to use
  obligation_keywords:
    - "must"
    - "shall"
    - "required"
    - "requires"
    - "requirement"
    - "mandate"
    - "mandates"
    - "necessary"
    - "obligation"
    - "mandatory"
    - "should"
    - "needs to"
    - "obligated to"
  
# Matching Configuration
matching:
  threshold_fuzzy: 80  # Fuzzy matching threshold (0-100)
  threshold_similarity: 0.6  # Vector similarity threshold (0-1)
  approach: "hybrid"  # Options: keyword, fuzzy, semantic, hybrid
  
# Output Configuration
output:
  format: "console"  # Options: console, csv, json, html, all
  detail_level: "medium"  # Options: low, medium, high
  output_dir: "reports"
  
# Logging Configuration
logging:
  level: "INFO"  # Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
  file: "logs/compliance.log"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  console: true

# Scheduler Configuration
scheduler:
  enabled: true
  check_time: "01:00"  # 1 AM daily
  days_lookback: 1     # How many days back to check
  notify_email: "compliance@example.com"
